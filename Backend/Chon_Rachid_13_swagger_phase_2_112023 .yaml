swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: 1.0.0
  termsOfService: "http://swagger.io/terms/" 
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /users/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API endpoint for user login.
      parameters:
        - in: body
          name: body
          description: Payload containing email and password for login.
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - application/json
      responses:
        "200":
          description: Login successful.
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Invalid email or password provided.
        "500":
          description: Internal server error occurred.

  /users/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API endpoint for user registration.
      parameters:
        - in: body
          name: body
          description: Payload containing user registration details.
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "200":
          description: Signup successful.
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid or missing fields.
        "500":
          description: Internal server error occurred.

  /users/profile:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile
      description: Retrieve the profile of the authenticated user.
      parameters:
        - in: header
          name: Authorization
          type: string
          description: Bearer token for authentication.
          required: true
      produces:
        - application/json
      responses:
        "200":
          description: Profile retrieval successful.
          schema:
            $ref: "#/definitions/UserProfile"
        "400":
          description: Invalid request parameters.
        "401":
          description: Unauthorized access.
        "403":
          description: Forbidden access
        "500":
          description: Internal server error occurred.

    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Update Profile
      description: Update the authenticated user's profile information.
      parameters:
        - in: header
          name: Authorization
          description: Bearer token for authentication.
          type: string
          required: true
        - in: body
          name: body
          description: Payload containing profile update information.
          required: true
          schema:
            $ref: "#/definitions/UpdateUserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: Profile update successful.
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid or missing fields.
        "401":
          description: Unauthorized access.
        "403":
          description: Forbidden access
        "500":
          description: Internal server error occurred.

  /users/accounts:
    get:
      security:
        - Bearer: []
      tags:
        - Account Module
      summary: Retrieve Accounts
      description: Fetch all bank accounts associated with the authenticated user.
      parameters:
        - in: header
          name: Authorization
          type: string
          description: Bearer token for authentication.
          required: true
        - in: query
          name: userId
          type: string
          description: UserId to querie  User's accounts
          required: true
          
      produces:
        - application/json
      responses:
        "200":
          description: Accounts retrieved successfully.
          schema:
            type: array
            items:
              $ref: "#/definitions/UserAccount"
        "400":
          description: Invalid request parameters.
        "401":
          description: Unauthorized access.
        "403":
          description: Forbidden access
        "500":
          description: Internal server error occurred.

  /users/accounts/transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Retrieve Transactions
      description: Fetch transaction history for the authenticated user within a specified date range.
      parameters:
        - in: header
          name: Authorization
          type: string
          description: Bearer token for authentication.
          required: true
        - in: query
          name: accountId
          type: string
          required: true
          description: Account Id
        - in: query
          name: Date
          type: string
          format: date
          required: false
          description: date for query transaction history retrieval.
      produces:
        - application/json
      responses:
        "200":
          description: Transactions retrieved successfully.
          schema:
            type: array
            items:
              $ref: "#/definitions/UserTransaction"
        "400":
          description: Invalid request parameters.
        "401":
          description: Unauthorized access.
        "403":
          description: Forbidden access
        "500":
          description: Internal server error occurred.

    put:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Update Transaction
      description: Update details for a specific transaction.
      parameters:
        - in: header
          name: Authorization
          type: string
          description: Bearer token for authentication.
          required: true
        - in: body
          name: body
          description: Payload containing updated transaction details.
          schema:
            $ref: "#/definitions/TransactionUpdate"
      produces:
        - application/json
      responses:
        "200":
          description: Transaction update successful.
          schema:
            $ref: "#/definitions/TransactionResponse"
        "400":
          description: Invalid or missing fields.
        "401":
          description: Unauthorized access.
        "403":
          description: Forbidden access
        "500":
          description: Internal server error occurred.
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  UserTransaction:
    type: object
    properties:
      id:
        type: string
        description: Unique identifier for the transaction.
      date:
        type: string
        format: date-time
        description: Date and time of the transaction.
      amount:
        type: number
        format: float
        description: Amount of the transaction.
      description:
        type: string
        description: Brief description of the transaction.
      category:
        type: string
        description: Category of the transaction (e.g., groceries, utilities).
      note:
        type: string
        description: Any additional notes or comments about the transaction.
  TransactionUpdate:
    required:
      - transactionId
    type: object
    properties:
      category:
        type: string
        description: Updated category for the transaction.
      note:
        type: string
        description: Updated note or comment for the transaction.
      transactionId:
        type: string

        description: Transaction Id
  TransactionResponse:
    type: object
    properties:
      message:
        type: string
        description: Message indicating the result of the transaction update.
      updatedTransaction:
        $ref: "#/definitions/UserTransaction"
        description: Details of the updated transaction.
  UserAccount:
    type: object
    properties:
      id:
        type: string
        description: Unique identifier for the account.
      accountType:
        type: string
        description: Type of the account.
      balance:
        type: number
        format: float
        description: Current balance of the account.
  User:
    properties:
      email:
        type: string
        format: email
        description: user email
      password:
        type: string
        format: password
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  Login:
    properties:
      email:
        type: string
        format: email
        description: user email
      password:
        type: string
        format: password
        description: user password
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  UserProfile:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          firstName:
            type: string
          lastName:
            type: string
          id:
            type: string
  UpdateUserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
  Accounts:
    type: object
    properties:
      userId:
        type: string
      date:
        type: string
        format: date
        description: day date
  Transactions:
    type: object
    properties:
      transactionId:
        type: string
  TransactionsList:
    properties:
      transactionId:
        type: string
