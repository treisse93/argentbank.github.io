{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Phoenix\\\\Documents\\\\Developpeur_d_application_JavaScript_React\\\\projet_13\\\\argent_bank\\\\Frontend\\\\src\\\\pages\\\\loginPage\\\\loginPage.jsx\",\n  _s = $RefreshSig$();\nimport \"../../sass/pages/loginPage/LoginPage.scss\";\nimport { fetch_Token } from \"../../services/login.service.js\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUserCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { fetch_UserInfos } from \"../../services/login.service.js\";\nimport { set_Login } from \"../../Redux/authReducer/authSlice.js\";\nimport { set_User } from \"../../Redux/userReducer/userSlice.js\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Invalid from \"./invalid.jsx\";\n\n/**\n * Component for the login page.\n * @returns {JSX.Element} The LoginPage component.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginPage() {\n  _s();\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [remember, setRemember] = useState(false);\n  const [show, setShow] = useState(false);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const TokenInState = useSelector(state => state.login.token);\n  useEffect(() => {\n    console.log(TokenInState);\n    if (TokenInState) {\n      navigate(\"/profile\");\n    }\n  }, [TokenInState, navigate]);\n\n  /**\n   * Function to handle the \"Remember me\" checkbox.\n   */\n  const handleCheck = () => {\n    // Get the 'remember' checkbox element\n    const check = document.getElementById(\"remember\");\n    // If the checkbox is checked, set 'remember' state to true\n    if (check.checked) {\n      setRemember(true);\n    }\n  };\n\n  /**\n   * Function to handle the login form submission.\n   * @param {Object} e - The form submission event.\n   */\n  const handle_Form = async e => {\n    e.preventDefault();\n\n    // Attempt to fetch a token with the provided password and email\n    const token = await fetch_Token(password, email);\n\n    // If the password or email is empty, or fetching the token fails, show an error message\n    if (password === \"\" || email === \"\" || !token) {\n      setShow(true);\n      setTimeout(() => {\n        setShow(false);\n      }, 3000);\n    } else {\n      // If credentials are valid, dispatch the login action to update the state\n      dispatch(set_Login({\n        token: token,\n        keepLogging: remember,\n        authenticated: true\n      }));\n\n      // Fetch user information using the token\n      const infos = await fetch_UserInfos(token);\n      const user = {\n        firstName: infos.firstName,\n        lastName: infos.lastName,\n        id: infos.id\n      };\n\n      // Dispatch the set user action to update user information in the state\n      dispatch(set_User(user));\n\n      // Navigate to the user's profile page\n      navigate(\"/profile\");\n    }\n    return;\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"main__LoginPage\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main__LoginPage__Container\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        className: \"title_Login_Icon\",\n        icon: faUserCircle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"main__LoginPage__Container__title\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"LoginForm__Container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"LoginForm__Container__Label\",\n            htmlFor: \"userMail\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input\",\n            type: \"text\",\n            id: \"userMail\",\n            name: \"username\",\n            autoComplete: \"off\",\n            onChange: e => {\n              setEmail(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"LoginForm__Container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"LoginForm__Container__Label\",\n            htmlFor: \"userPassword\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input\",\n            type: \"password\",\n            autoComplete: \"off\",\n            id: \"userPassword\",\n            name: \"password\",\n            onChange: e => {\n              setPassword(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Invalid, {\n            show: show\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"check__Container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"check__Container__Input\",\n            type: \"checkbox\",\n            id: \"remember\",\n            name: \"Remember me\",\n            onClick: handleCheck\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"check__Container__Label\",\n            htmlFor: \"remember\",\n            children: \"Remember me\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loginButton\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            type: \"button\",\n            onClick: handle_Form,\n            children: \"Sign in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"jhiGxIH1Y9lYrmXmaKtKCfguRBY=\", false, function () {\n  return [useDispatch, useNavigate, useSelector];\n});\n_c = LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["fetch_Token","FontAwesomeIcon","faUserCircle","useNavigate","useEffect","useState","fetch_UserInfos","set_Login","set_User","useDispatch","useSelector","Invalid","jsxDEV","_jsxDEV","LoginPage","_s","password","setPassword","email","setEmail","remember","setRemember","show","setShow","dispatch","navigate","TokenInState","state","login","token","console","log","handleCheck","check","document","getElementById","checked","handle_Form","e","preventDefault","setTimeout","keepLogging","authenticated","infos","user","firstName","lastName","id","className","children","icon","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","name","autoComplete","onChange","target","value","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Phoenix/Documents/Developpeur_d_application_JavaScript_React/projet_13/argent_bank/Frontend/src/pages/loginPage/loginPage.jsx"],"sourcesContent":["import \"../../sass/pages/loginPage/LoginPage.scss\";\nimport { fetch_Token } from \"../../services/login.service.js\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUserCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { fetch_UserInfos } from \"../../services/login.service.js\";\nimport { set_Login } from \"../../Redux/authReducer/authSlice.js\";\nimport { set_User } from \"../../Redux/userReducer/userSlice.js\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Invalid from \"./invalid.jsx\";\n\n/**\n * Component for the login page.\n * @returns {JSX.Element} The LoginPage component.\n */\nexport default function LoginPage() {\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [remember, setRemember] = useState(false);\n  const [show, setShow] = useState(false);\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const TokenInState = useSelector((state) => state.login.token);\n\n  useEffect(() => {\n    console.log(TokenInState);\n    if (TokenInState) {\n      navigate(\"/profile\");\n    }\n  }, [TokenInState, navigate]);\n\n  /**\n   * Function to handle the \"Remember me\" checkbox.\n   */\n  const handleCheck = () => {\n    // Get the 'remember' checkbox element\n    const check = document.getElementById(\"remember\");\n    // If the checkbox is checked, set 'remember' state to true\n    if (check.checked) {\n      setRemember(true);\n    }\n  };\n\n  /**\n   * Function to handle the login form submission.\n   * @param {Object} e - The form submission event.\n   */\n  const handle_Form = async (e) => {\n    e.preventDefault();\n\n    // Attempt to fetch a token with the provided password and email\n    const token = await fetch_Token(password, email);\n\n    // If the password or email is empty, or fetching the token fails, show an error message\n    if (password === \"\" || email === \"\" || !token) {\n      setShow(true);\n      setTimeout(() => {\n        setShow(false);\n      }, 3000);\n    } else {\n      // If credentials are valid, dispatch the login action to update the state\n      dispatch(\n        set_Login({ token: token, keepLogging: remember, authenticated: true })\n      );\n\n      // Fetch user information using the token\n      const infos = await fetch_UserInfos(token);\n      const user = {\n        firstName: infos.firstName,\n        lastName: infos.lastName,\n        id: infos.id,\n      };\n\n      // Dispatch the set user action to update user information in the state\n      dispatch(set_User(user));\n\n      // Navigate to the user's profile page\n      navigate(\"/profile\");\n    }\n    return;\n  };\n\n  return (\n    <main className=\"main__LoginPage\">\n      <div className=\"main__LoginPage__Container\">\n        {/* User icon */}\n        <FontAwesomeIcon className=\"title_Login_Icon\" icon={faUserCircle} />\n        <h1 className=\"main__LoginPage__Container__title\">Sign In</h1>\n        <form>\n          {/* Username input */}\n          <div className=\"LoginForm__Container\">\n            <label className=\"LoginForm__Container__Label\" htmlFor=\"userMail\">\n              Username\n            </label>\n            <input\n              className=\"input\"\n              type=\"text\"\n              id=\"userMail\"\n              name=\"username\"\n              autoComplete=\"off\"\n              onChange={(e) => {\n                setEmail(e.target.value);\n              }}\n            />\n          </div>\n          {/* Password input */}\n          <div className=\"LoginForm__Container\">\n            <label\n              className=\"LoginForm__Container__Label\"\n              htmlFor=\"userPassword\"\n            >\n              Password\n            </label>\n            <input\n              className=\"input\"\n              type=\"password\"\n              autoComplete=\"off\"\n              id=\"userPassword\"\n              name=\"password\"\n              onChange={(e) => {\n                setPassword(e.target.value);\n              }}\n            />\n            {/* Display the Forgot component with error message if 'show' is true */}\n            <Invalid show={show} />\n          </div>\n          {/* \"Remember me\" checkbox */}\n          <div className=\"check__Container\">\n            <input\n              className=\"check__Container__Input\"\n              type=\"checkbox\"\n              id=\"remember\"\n              name=\"Remember me\"\n              onClick={handleCheck}\n            />\n            <label className=\"check__Container__Label\" htmlFor=\"remember\">\n              Remember me\n            </label>\n          </div>\n          {/* Sign-in button */}\n          <div className=\"loginButton\">\n            <button className=\"button\" type=\"button\" onClick={handle_Form}>\n              Sign in\n            </button>\n          </div>\n        </form>\n      </div>\n    </main>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}