{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Phoenix\\\\Downloads\\\\argent_bank\\\\argent_bank\\\\Frontend\\\\src\\\\pages\\\\LoginPage\\\\LoginPage.jsx\",\n  _s = $RefreshSig$();\nimport style from \"./LoginPage.module.css\";\nimport { fetch_Token } from \"../../Services/login.service.js\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUserCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { fetch_UserInfos } from \"../../Services/login.service.js\";\nimport { set_Login } from \"../../Redux/AuthReducer/AuthSlice.js\";\nimport { set_User } from \"../../Redux/UserReducer/UserSlice.js\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\n/**\n * Component for displaying an error message when credentials are invalid.\n * @param {Object} props - The component's props.\n * @param {boolean} props.show - Indicates whether to show the error message.\n * @returns {JSX.Element} The Forgot component.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Forgot({\n  show\n}) {\n  // If 'show' prop is true, display the error message\n  if (show) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.forgot,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Your credentials are invalids!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  }\n  // If 'show' prop is false, don't render anything\n  return null;\n}\n\n/**\n * Component for the login page.\n * @returns {JSX.Element} The LoginPage component.\n */\n_c = Forgot;\nexport default function LoginPage() {\n  _s();\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const [remember, setRemember] = useState(false);\n  const [show, setShow] = useState(false);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const TokenInState = useSelector(state => state.login.token);\n  useEffect(() => {\n    console.log(TokenInState);\n    if (TokenInState) {\n      navigate(\"/profile\");\n    }\n  }, [TokenInState, navigate]);\n\n  /**\n   * Function to handle the \"Remember me\" checkbox.\n   */\n  const handleCheck = () => {\n    // Get the 'remember' checkbox element\n    const check = document.getElementById(\"remember\");\n    // If the checkbox is checked, set 'remember' state to true\n    if (check.checked) {\n      setRemember(true);\n    }\n  };\n\n  /**\n   * Function to handle the login form submission.\n   * @param {Object} e - The form submission event.\n   */\n  const handle_Form = async e => {\n    e.preventDefault();\n\n    // Attempt to fetch a token with the provided password and email\n    const token = await fetch_Token(password, email);\n\n    // If the password or email is empty, or fetching the token fails, show an error message\n    if (password === '' || email === '' || !token) {\n      setShow(true);\n      setTimeout(() => {\n        setShow(false);\n      }, 3000);\n    } else {\n      // If credentials are valid, dispatch the login action to update the state\n      dispatch(set_Login({\n        token: token,\n        keepLogging: remember,\n        authenticated: true\n      }));\n\n      // Fetch user information using the token\n      const infos = await fetch_UserInfos(token);\n      const user = {\n        \"firstName\": infos.firstName,\n        \"lastName\": infos.lastName,\n        \"id\": infos.id\n      };\n\n      // Dispatch the set user action to update user information in the state\n      dispatch(set_User(user));\n\n      // Navigate to the user's profile page\n      navigate(\"/profile\");\n    }\n    return;\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: style.bg_dark,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.signIn_Container,\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        className: style.title_Login_Icon,\n        icon: faUserCircle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: style.title,\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.input_Container,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: style.label,\n            htmlFor: \"userMail\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: `${style.input} `,\n            type: \"text\",\n            id: \"userMail\",\n            name: \"username\",\n            autoComplete: \"off\",\n            onChange: e => {\n              setEmail(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.input_Container,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: style.label,\n            htmlFor: \"userPassword\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: `${style.input} `,\n            type: \"password\",\n            autoComplete: \"off\",\n            id: \"userPassword\",\n            name: \"password\",\n            onChange: e => {\n              setPassword(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Forgot, {\n            show: show\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.input_Check_Container,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: style.input_Check,\n            type: \"checkbox\",\n            id: \"remember\",\n            name: \"Remember me\",\n            onClick: handleCheck\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: style.label_Check_,\n            htmlFor: \"remember\",\n            children: \"Remember me\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.button_container,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: style.button,\n            type: \"button\",\n            onClick: handle_Form,\n            children: \"Sign in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"nfr4RFPsDAnNgMB3Te6JQGVZhEY=\", false, function () {\n  return [useDispatch, useNavigate, useSelector];\n});\n_c2 = LoginPage;\nvar _c, _c2;\n$RefreshReg$(_c, \"Forgot\");\n$RefreshReg$(_c2, \"LoginPage\");","map":{"version":3,"names":["style","fetch_Token","FontAwesomeIcon","faUserCircle","useNavigate","useEffect","useState","fetch_UserInfos","set_Login","set_User","useDispatch","useSelector","jsxDEV","_jsxDEV","Forgot","show","className","forgot","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","LoginPage","_s","password","setPassword","email","setEmail","remember","setRemember","setShow","dispatch","navigate","TokenInState","state","login","token","console","log","handleCheck","check","document","getElementById","checked","handle_Form","e","preventDefault","setTimeout","keepLogging","authenticated","infos","user","firstName","lastName","id","bg_dark","signIn_Container","title_Login_Icon","icon","title","input_Container","label","htmlFor","input","type","name","autoComplete","onChange","target","value","input_Check_Container","input_Check","onClick","label_Check_","button_container","button","_c2","$RefreshReg$"],"sources":["C:/Users/Phoenix/Downloads/argent_bank/argent_bank/Frontend/src/pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import style from \"./LoginPage.module.css\";\nimport { fetch_Token } from \"../../Services/login.service.js\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUserCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { fetch_UserInfos } from \"../../Services/login.service.js\";\nimport { set_Login } from \"../../Redux/AuthReducer/AuthSlice.js\";\nimport { set_User } from \"../../Redux/UserReducer/UserSlice.js\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\n/**\n * Component for displaying an error message when credentials are invalid.\n * @param {Object} props - The component's props.\n * @param {boolean} props.show - Indicates whether to show the error message.\n * @returns {JSX.Element} The Forgot component.\n */\nfunction Forgot({ show }) {\n  // If 'show' prop is true, display the error message\n  if (show) {\n    return (\n      <div className={style.forgot}>\n        <p>Your credentials are invalids!</p>\n      </div>\n    );\n  }\n  // If 'show' prop is false, don't render anything\n  return null;\n}\n\n/**\n * Component for the login page.\n * @returns {JSX.Element} The LoginPage component.\n */\nexport default function LoginPage() {\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const [remember, setRemember] = useState(false);\n  const [show, setShow] = useState(false);\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n    const TokenInState = useSelector((state) => state.login.token);\n\n\n  useEffect(() => {\n\n  console.log(TokenInState)\n  if (TokenInState) {\n    navigate(\"/profile\");\n  }\n}, [TokenInState, navigate]);\n\n  \n\n  /**\n   * Function to handle the \"Remember me\" checkbox.\n   */\n  const handleCheck = () => {\n    // Get the 'remember' checkbox element\n    const check = document.getElementById(\"remember\");\n    // If the checkbox is checked, set 'remember' state to true\n    if (check.checked) {\n      setRemember(true);\n    }\n  };\n\n  /**\n   * Function to handle the login form submission.\n   * @param {Object} e - The form submission event.\n   */\n  const handle_Form = async (e) => {\n    e.preventDefault();\n\n    // Attempt to fetch a token with the provided password and email\n    const token = await fetch_Token(password, email);\n\n    // If the password or email is empty, or fetching the token fails, show an error message\n    if (password === '' || email === '' || !token) {\n      setShow(true);\n      setTimeout(() => {\n        setShow(false);\n      }, 3000);\n    } else {\n      // If credentials are valid, dispatch the login action to update the state\n      dispatch(set_Login({ token: token, keepLogging: remember, authenticated: true }));\n\n      // Fetch user information using the token\n      const infos = await fetch_UserInfos(token);\n      const user = {\n        \"firstName\": infos.firstName,\n        \"lastName\": infos.lastName,\n        \"id\": infos.id,\n      };\n\n      // Dispatch the set user action to update user information in the state\n      dispatch(set_User(user));\n\n      // Navigate to the user's profile page\n      navigate(\"/profile\");\n    }\n    return;\n  };\n\n    return (\n    <main className={style.bg_dark}>\n  <div className={style.signIn_Container}>\n    {/* User icon */}\n    <FontAwesomeIcon\n      className={style.title_Login_Icon}\n      icon={faUserCircle}\n    />\n    <h1 className={style.title}>Sign In</h1>\n    <form>\n      {/* Username input */}\n      <div className={style.input_Container}>\n        <label className={style.label} htmlFor=\"userMail\">\n          Username\n        </label>\n        <input\n          className={`${style.input} `}\n          type=\"text\"\n          id=\"userMail\"\n          name=\"username\"\n          autoComplete=\"off\"\n          onChange={(e) => {\n            setEmail(e.target.value);\n          }}\n        />\n      </div>\n      {/* Password input */}\n      <div className={style.input_Container}>\n        <label className={style.label} htmlFor=\"userPassword\">\n          Password\n        </label>\n        <input\n          className={`${style.input} `}\n          type=\"password\"\n          autoComplete=\"off\"\n          id=\"userPassword\"\n          name=\"password\"\n          onChange={(e) => {\n            setPassword(e.target.value);\n          }}\n        />\n        {/* Display the Forgot component with error message if 'show' is true */}\n        <Forgot show={show} />\n      </div>\n      {/* \"Remember me\" checkbox */}\n      <div className={style.input_Check_Container}>\n        <input\n          className={style.input_Check}\n          type=\"checkbox\"\n          id=\"remember\"\n          name=\"Remember me\"\n          onClick={handleCheck}\n        />\n        <label className={style.label_Check_} htmlFor=\"remember\">\n          Remember me\n        </label>\n      </div>\n      {/* Sign-in button */}\n      <div className={style.button_container}>\n        <button\n          className={style.button}\n          type=\"button\"\n          onClick={handle_Form}\n        >\n          Sign in\n        </button>\n      </div>\n    </form>\n  </div>\n</main>\n\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,wBAAwB;AAC1C,SAASC,WAAW,QAAQ,iCAAiC;AAC7D,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,YAAY,QAAQ,mCAAmC;AAChE,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,eAAe,QAAQ,iCAAiC;AACjE,SAASC,SAAS,QAAQ,sCAAsC;AAChE,SAASC,QAAQ,QAAQ,sCAAsC;AAC/D,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;;AAEtD;AACA;AACA;AACA;AACA;AACA;AALA,SAAAC,MAAA,IAAAC,OAAA;AAMA,SAASC,MAAMA,CAAC;EAAEC;AAAK,CAAC,EAAE;EACxB;EACA,IAAIA,IAAI,EAAE;IACR,oBACEF,OAAA;MAAKG,SAAS,EAAEhB,KAAK,CAACiB,MAAO;MAAAC,QAAA,eAC3BL,OAAA;QAAAK,QAAA,EAAG;MAA8B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC;EAEV;EACA;EACA,OAAO,IAAI;AACb;;AAEA;AACA;AACA;AACA;AAHAC,EAAA,GAbST,MAAM;AAiBf,eAAe,SAASU,SAASA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACsB,KAAK,EAAEC,QAAQ,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACwB,QAAQ,EAAEC,WAAW,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACS,IAAI,EAAEiB,OAAO,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;EAEvC,MAAM2B,QAAQ,GAAGvB,WAAW,CAAC,CAAC;EAC9B,MAAMwB,QAAQ,GAAG9B,WAAW,CAAC,CAAC;EAC5B,MAAM+B,YAAY,GAAGxB,WAAW,CAAEyB,KAAK,IAAKA,KAAK,CAACC,KAAK,CAACC,KAAK,CAAC;EAGhEjC,SAAS,CAAC,MAAM;IAEhBkC,OAAO,CAACC,GAAG,CAACL,YAAY,CAAC;IACzB,IAAIA,YAAY,EAAE;MAChBD,QAAQ,CAAC,UAAU,CAAC;IACtB;EACF,CAAC,EAAE,CAACC,YAAY,EAAED,QAAQ,CAAC,CAAC;;EAI1B;AACF;AACA;EACE,MAAMO,WAAW,GAAGA,CAAA,KAAM;IACxB;IACA,MAAMC,KAAK,GAAGC,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC;IACjD;IACA,IAAIF,KAAK,CAACG,OAAO,EAAE;MACjBd,WAAW,CAAC,IAAI,CAAC;IACnB;EACF,CAAC;;EAED;AACF;AACA;AACA;EACE,MAAMe,WAAW,GAAG,MAAOC,CAAC,IAAK;IAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC;;IAElB;IACA,MAAMV,KAAK,GAAG,MAAMrC,WAAW,CAACyB,QAAQ,EAAEE,KAAK,CAAC;;IAEhD;IACA,IAAIF,QAAQ,KAAK,EAAE,IAAIE,KAAK,KAAK,EAAE,IAAI,CAACU,KAAK,EAAE;MAC7CN,OAAO,CAAC,IAAI,CAAC;MACbiB,UAAU,CAAC,MAAM;QACfjB,OAAO,CAAC,KAAK,CAAC;MAChB,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,MAAM;MACL;MACAC,QAAQ,CAACzB,SAAS,CAAC;QAAE8B,KAAK,EAAEA,KAAK;QAAEY,WAAW,EAAEpB,QAAQ;QAAEqB,aAAa,EAAE;MAAK,CAAC,CAAC,CAAC;;MAEjF;MACA,MAAMC,KAAK,GAAG,MAAM7C,eAAe,CAAC+B,KAAK,CAAC;MAC1C,MAAMe,IAAI,GAAG;QACX,WAAW,EAAED,KAAK,CAACE,SAAS;QAC5B,UAAU,EAAEF,KAAK,CAACG,QAAQ;QAC1B,IAAI,EAAEH,KAAK,CAACI;MACd,CAAC;;MAED;MACAvB,QAAQ,CAACxB,QAAQ,CAAC4C,IAAI,CAAC,CAAC;;MAExB;MACAnB,QAAQ,CAAC,UAAU,CAAC;IACtB;IACA;EACF,CAAC;EAEC,oBACArB,OAAA;IAAMG,SAAS,EAAEhB,KAAK,CAACyD,OAAQ;IAAAvC,QAAA,eACjCL,OAAA;MAAKG,SAAS,EAAEhB,KAAK,CAAC0D,gBAAiB;MAAAxC,QAAA,gBAErCL,OAAA,CAACX,eAAe;QACdc,SAAS,EAAEhB,KAAK,CAAC2D,gBAAiB;QAClCC,IAAI,EAAEzD;MAAa;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB,CAAC,eACFT,OAAA;QAAIG,SAAS,EAAEhB,KAAK,CAAC6D,KAAM;QAAA3C,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxCT,OAAA;QAAAK,QAAA,gBAEEL,OAAA;UAAKG,SAAS,EAAEhB,KAAK,CAAC8D,eAAgB;UAAA5C,QAAA,gBACpCL,OAAA;YAAOG,SAAS,EAAEhB,KAAK,CAAC+D,KAAM;YAACC,OAAO,EAAC,UAAU;YAAA9C,QAAA,EAAC;UAElD;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACRT,OAAA;YACEG,SAAS,EAAG,GAAEhB,KAAK,CAACiE,KAAM,GAAG;YAC7BC,IAAI,EAAC,MAAM;YACXV,EAAE,EAAC,UAAU;YACbW,IAAI,EAAC,UAAU;YACfC,YAAY,EAAC,KAAK;YAClBC,QAAQ,EAAGtB,CAAC,IAAK;cACflB,QAAQ,CAACkB,CAAC,CAACuB,MAAM,CAACC,KAAK,CAAC;YAC1B;UAAE;YAAApD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAENT,OAAA;UAAKG,SAAS,EAAEhB,KAAK,CAAC8D,eAAgB;UAAA5C,QAAA,gBACpCL,OAAA;YAAOG,SAAS,EAAEhB,KAAK,CAAC+D,KAAM;YAACC,OAAO,EAAC,cAAc;YAAA9C,QAAA,EAAC;UAEtD;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACRT,OAAA;YACEG,SAAS,EAAG,GAAEhB,KAAK,CAACiE,KAAM,GAAG;YAC7BC,IAAI,EAAC,UAAU;YACfE,YAAY,EAAC,KAAK;YAClBZ,EAAE,EAAC,cAAc;YACjBW,IAAI,EAAC,UAAU;YACfE,QAAQ,EAAGtB,CAAC,IAAK;cACfpB,WAAW,CAACoB,CAAC,CAACuB,MAAM,CAACC,KAAK,CAAC;YAC7B;UAAE;YAAApD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAEFT,OAAA,CAACC,MAAM;YAACC,IAAI,EAAEA;UAAK;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnB,CAAC,eAENT,OAAA;UAAKG,SAAS,EAAEhB,KAAK,CAACwE,qBAAsB;UAAAtD,QAAA,gBAC1CL,OAAA;YACEG,SAAS,EAAEhB,KAAK,CAACyE,WAAY;YAC7BP,IAAI,EAAC,UAAU;YACfV,EAAE,EAAC,UAAU;YACbW,IAAI,EAAC,aAAa;YAClBO,OAAO,EAAEjC;UAAY;YAAAtB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtB,CAAC,eACFT,OAAA;YAAOG,SAAS,EAAEhB,KAAK,CAAC2E,YAAa;YAACX,OAAO,EAAC,UAAU;YAAA9C,QAAA,EAAC;UAEzD;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eAENT,OAAA;UAAKG,SAAS,EAAEhB,KAAK,CAAC4E,gBAAiB;UAAA1D,QAAA,eACrCL,OAAA;YACEG,SAAS,EAAEhB,KAAK,CAAC6E,MAAO;YACxBX,IAAI,EAAC,QAAQ;YACbQ,OAAO,EAAE5B,WAAY;YAAA5B,QAAA,EACtB;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAGP;AAACG,EAAA,CA9IuBD,SAAS;EAAA,QAMdd,WAAW,EACXN,WAAW,EACLO,WAAW;AAAA;AAAAmE,GAAA,GARZtD,SAAS;AAAA,IAAAD,EAAA,EAAAuD,GAAA;AAAAC,YAAA,CAAAxD,EAAA;AAAAwD,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}