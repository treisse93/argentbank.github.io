{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Phoenix\\\\Documents\\\\Developpeur_d_application_JavaScript_React\\\\projet_13\\\\argent_bank\\\\Frontend\\\\src\\\\pages\\\\loginPage\\\\loginPage.jsx\",\n  _s = $RefreshSig$();\nimport \"../../sass/pages/loginPage/LoginPage.scss\";\nimport { fetch_Token } from \"../../services/login.service.js\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUserCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { fetch_UserInfos } from \"../../services/login.service.js\";\nimport { set_Login } from \"../../Redux/authReducer/authSlice.js\";\nimport { set_User } from \"../../Redux/userReducer/userSlice.js\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\n/**\n * Component for displaying an error message when credentials are invalid.\n * @param {Object} props - The component's props.\n * @param {boolean} props.show - Indicates whether to show the error message.\n * @returns {JSX.Element} The Forgot component.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Invalid({\n  show\n}) {\n  // If 'show' prop is true, display the error message\n  if (show) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invalid\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Vos identifiants ne sont pas valides!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  }\n  // If 'show' prop is false, don't render anything\n  return null;\n}\n\n/**\n * Component for the login page.\n * @returns {JSX.Element} The LoginPage component.\n */\n_c = Invalid;\nexport default function LoginPage() {\n  _s();\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [remember, setRemember] = useState(false);\n  const [show, setShow] = useState(false);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const TokenInState = useSelector(state => state.login.token);\n  useEffect(() => {\n    console.log(TokenInState);\n    if (TokenInState) {\n      navigate(\"/profile\");\n    }\n  }, [TokenInState, navigate]);\n\n  /**\n   * Function to handle the \"Remember me\" checkbox.\n   */\n  const handleCheck = () => {\n    // Get the 'remember' checkbox element\n    const check = document.getElementById(\"remember\");\n    // If the checkbox is checked, set 'remember' state to true\n    if (check.checked) {\n      setRemember(true);\n    }\n  };\n\n  /**\n   * Function to handle the login form submission.\n   * @param {Object} e - The form submission event.\n   */\n  const handle_Form = async e => {\n    e.preventDefault();\n\n    // Attempt to fetch a token with the provided password and email\n    const token = await fetch_Token(password, email);\n\n    // If the password or email is empty, or fetching the token fails, show an error message\n    if (password === \"\" || email === \"\" || !token) {\n      setShow(true);\n      setTimeout(() => {\n        setShow(false);\n      }, 3000);\n    } else {\n      // If credentials are valid, dispatch the login action to update the state\n      dispatch(set_Login({\n        token: token,\n        keepLogging: remember,\n        authenticated: true\n      }));\n\n      // Fetch user information using the token\n      const infos = await fetch_UserInfos(token);\n      const user = {\n        firstName: infos.firstName,\n        lastName: infos.lastName,\n        id: infos.id\n      };\n\n      // Dispatch the set user action to update user information in the state\n      dispatch(set_User(user));\n\n      // Navigate to the user's profile page\n      navigate(\"/profile\");\n    }\n    return;\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"bg_dark\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signIn_Container\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        className: \"title_Login_Icon\",\n        icon: faUserCircle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input_Container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label\",\n            htmlFor: \"userMail\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: `$\"input\" `,\n            type: \"text\",\n            id: \"userMail\",\n            name: \"username\",\n            autoComplete: \"off\",\n            onChange: e => {\n              setEmail(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input_Container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label\",\n            htmlFor: \"userPassword\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: `$\"input\" `,\n            type: \"password\",\n            autoComplete: \"off\",\n            id: \"userPassword\",\n            name: \"password\",\n            onChange: e => {\n              setPassword(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Invalid, {\n            show: show\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input_Check_Container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input_Check\",\n            type: \"checkbox\",\n            id: \"remember\",\n            name: \"Remember me\",\n            onClick: handleCheck\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label_Check_\",\n            htmlFor: \"remember\",\n            children: \"Remember me\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button_container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            type: \"button\",\n            onClick: handle_Form,\n            children: \"Sign in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"jhiGxIH1Y9lYrmXmaKtKCfguRBY=\", false, function () {\n  return [useDispatch, useNavigate, useSelector];\n});\n_c2 = LoginPage;\nvar _c, _c2;\n$RefreshReg$(_c, \"Invalid\");\n$RefreshReg$(_c2, \"LoginPage\");","map":{"version":3,"names":["fetch_Token","FontAwesomeIcon","faUserCircle","useNavigate","useEffect","useState","fetch_UserInfos","set_Login","set_User","useDispatch","useSelector","jsxDEV","_jsxDEV","Invalid","show","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","LoginPage","_s","password","setPassword","email","setEmail","remember","setRemember","setShow","dispatch","navigate","TokenInState","state","login","token","console","log","handleCheck","check","document","getElementById","checked","handle_Form","e","preventDefault","setTimeout","keepLogging","authenticated","infos","user","firstName","lastName","id","icon","htmlFor","type","name","autoComplete","onChange","target","value","onClick","_c2","$RefreshReg$"],"sources":["C:/Users/Phoenix/Documents/Developpeur_d_application_JavaScript_React/projet_13/argent_bank/Frontend/src/pages/loginPage/loginPage.jsx"],"sourcesContent":["import \"../../sass/pages/loginPage/LoginPage.scss\";\nimport { fetch_Token } from \"../../services/login.service.js\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUserCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { fetch_UserInfos } from \"../../services/login.service.js\";\nimport { set_Login } from \"../../Redux/authReducer/authSlice.js\";\nimport { set_User } from \"../../Redux/userReducer/userSlice.js\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\n/**\n * Component for displaying an error message when credentials are invalid.\n * @param {Object} props - The component's props.\n * @param {boolean} props.show - Indicates whether to show the error message.\n * @returns {JSX.Element} The Forgot component.\n */\nfunction Invalid({ show }) {\n  // If 'show' prop is true, display the error message\n  if (show) {\n    return (\n      <div className=\"invalid\">\n        <p>Vos identifiants ne sont pas valides!</p>\n      </div>\n    );\n  }\n  // If 'show' prop is false, don't render anything\n  return null;\n}\n\n/**\n * Component for the login page.\n * @returns {JSX.Element} The LoginPage component.\n */\nexport default function LoginPage() {\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [remember, setRemember] = useState(false);\n  const [show, setShow] = useState(false);\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const TokenInState = useSelector((state) => state.login.token);\n\n  useEffect(() => {\n    console.log(TokenInState);\n    if (TokenInState) {\n      navigate(\"/profile\");\n    }\n  }, [TokenInState, navigate]);\n\n  /**\n   * Function to handle the \"Remember me\" checkbox.\n   */\n  const handleCheck = () => {\n    // Get the 'remember' checkbox element\n    const check = document.getElementById(\"remember\");\n    // If the checkbox is checked, set 'remember' state to true\n    if (check.checked) {\n      setRemember(true);\n    }\n  };\n\n  /**\n   * Function to handle the login form submission.\n   * @param {Object} e - The form submission event.\n   */\n  const handle_Form = async (e) => {\n    e.preventDefault();\n\n    // Attempt to fetch a token with the provided password and email\n    const token = await fetch_Token(password, email);\n\n    // If the password or email is empty, or fetching the token fails, show an error message\n    if (password === \"\" || email === \"\" || !token) {\n      setShow(true);\n      setTimeout(() => {\n        setShow(false);\n      }, 3000);\n    } else {\n      // If credentials are valid, dispatch the login action to update the state\n      dispatch(\n        set_Login({ token: token, keepLogging: remember, authenticated: true })\n      );\n\n      // Fetch user information using the token\n      const infos = await fetch_UserInfos(token);\n      const user = {\n        firstName: infos.firstName,\n        lastName: infos.lastName,\n        id: infos.id,\n      };\n\n      // Dispatch the set user action to update user information in the state\n      dispatch(set_User(user));\n\n      // Navigate to the user's profile page\n      navigate(\"/profile\");\n    }\n    return;\n  };\n\n  return (\n    <main className=\"bg_dark\">\n      <div className=\"signIn_Container\">\n        {/* User icon */}\n        <FontAwesomeIcon className=\"title_Login_Icon\" icon={faUserCircle} />\n        <h1 className=\"title\">Sign In</h1>\n        <form>\n          {/* Username input */}\n          <div className=\"input_Container\">\n            <label className=\"label\" htmlFor=\"userMail\">\n              Username\n            </label>\n            <input\n              className={`$\"input\" `}\n              type=\"text\"\n              id=\"userMail\"\n              name=\"username\"\n              autoComplete=\"off\"\n              onChange={(e) => {\n                setEmail(e.target.value);\n              }}\n            />\n          </div>\n          {/* Password input */}\n          <div className=\"input_Container\">\n            <label className=\"label\" htmlFor=\"userPassword\">\n              Password\n            </label>\n            <input\n              className={`$\"input\" `}\n              type=\"password\"\n              autoComplete=\"off\"\n              id=\"userPassword\"\n              name=\"password\"\n              onChange={(e) => {\n                setPassword(e.target.value);\n              }}\n            />\n            {/* Display the Forgot component with error message if 'show' is true */}\n            <Invalid show={show} />\n          </div>\n          {/* \"Remember me\" checkbox */}\n          <div className=\"input_Check_Container\">\n            <input\n              className=\"input_Check\"\n              type=\"checkbox\"\n              id=\"remember\"\n              name=\"Remember me\"\n              onClick={handleCheck}\n            />\n            <label className=\"label_Check_\" htmlFor=\"remember\">\n              Remember me\n            </label>\n          </div>\n          {/* Sign-in button */}\n          <div className=\"button_container\">\n            <button className=\"button\" type=\"button\" onClick={handle_Form}>\n              Sign in\n            </button>\n          </div>\n        </form>\n      </div>\n    </main>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}