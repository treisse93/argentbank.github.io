{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\n\n// Create a user slice with initial state\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    firstName: null,\n    // Stores the user's first name\n    lastName: null,\n    // Stores the user's last name\n    id: null // Stores the user's ID (not used in this code)\n  },\n  reducers: {\n    // Action to set the user's first name\n    set_FirstName: (state, action) => {\n      state.firstName = action.payload;\n      // Update the first name in local storage\n      const user = JSON.parse(localStorage.getItem('user'));\n      user.firstName = action.payload;\n      localStorage.setItem('user', JSON.stringify(user));\n    },\n    // Action to set the user's last name\n    set_LastName: (state, action) => {\n      state.lastName = action.payload;\n\n      // Update the last name in local storage\n      const user = JSON.parse(localStorage.getItem('user'));\n      user.lastName = action.payload;\n      localStorage.setItem('user', JSON.stringify(user));\n    },\n    // Action to set user data (first name, last name, and ID)\n    set_User: (state, action) => {\n      state.firstName = action.payload.firstName;\n      state.lastName = action.payload.lastName;\n      state.id = action.payload.id;\n\n      // Update user data in local storage\n      localStorage.setItem('user', JSON.stringify(action.payload));\n    },\n    // Action to remove user data from state and local storage\n    remove_User: state => {\n      localStorage.removeItem('user');\n      state.firstName = null;\n      state.lastName = null;\n      state.id = null;\n    }\n  }\n});\n\n// Export the reducer and actions\nexport default userSlice.reducer;\nexport const {\n  set_FirstName,\n  set_LastName,\n  set_User,\n  remove_User\n} = userSlice.actions;","map":{"version":3,"names":["createSlice","userSlice","name","initialState","firstName","lastName","id","reducers","set_FirstName","state","action","payload","user","JSON","parse","localStorage","getItem","setItem","stringify","set_LastName","set_User","remove_User","removeItem","reducer","actions"],"sources":["C:/Users/Phoenix/Documents/Developpeur_d_application_JavaScript_React/projet_13/argent_bank/Frontend/src/Redux/userReducer/userSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\n// Create a user slice with initial state\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    firstName: null, // Stores the user's first name\n    lastName: null,  // Stores the user's last name\n    id: null,        // Stores the user's ID (not used in this code)\n  },\n  reducers: {\n    // Action to set the user's first name\n    set_FirstName: (state, action) => {\n      state.firstName = action.payload;\n      // Update the first name in local storage\n      const user = JSON.parse(localStorage.getItem('user'));\n      user.firstName = action.payload;\n      localStorage.setItem('user', JSON.stringify(user));\n    },\n    \n    // Action to set the user's last name\n    set_LastName: (state, action) => {\n      state.lastName = action.payload;\n\n      // Update the last name in local storage\n      const user = JSON.parse(localStorage.getItem('user'));\n      user.lastName = action.payload;\n      localStorage.setItem('user', JSON.stringify(user));\n    },\n    // Action to set user data (first name, last name, and ID)\n    set_User: (state, action) => {\n      state.firstName = action.payload.firstName;\n      state.lastName = action.payload.lastName;\n      state.id = action.payload.id;\n\n      // Update user data in local storage\n      localStorage.setItem('user', JSON.stringify(action.payload));\n    },\n    // Action to remove user data from state and local storage\n    remove_User: (state) => {\n      localStorage.removeItem('user');\n      state.firstName = null; \n      state.lastName =  null;\n      state.id = null;\n    },\n  },\n});\n\n// Export the reducer and actions\nexport default userSlice.reducer;\nexport const { set_FirstName, set_LastName, set_User, remove_User } = userSlice.actions;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;;AAE9C;AACA,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC5BE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,SAAS,EAAE,IAAI;IAAE;IACjBC,QAAQ,EAAE,IAAI;IAAG;IACjBC,EAAE,EAAE,IAAI,CAAS;EACnB,CAAC;EACDC,QAAQ,EAAE;IACR;IACAC,aAAa,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAChCD,KAAK,CAACL,SAAS,GAAGM,MAAM,CAACC,OAAO;MAChC;MACA,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;MACrDJ,IAAI,CAACR,SAAS,GAAGM,MAAM,CAACC,OAAO;MAC/BI,YAAY,CAACE,OAAO,CAAC,MAAM,EAAEJ,IAAI,CAACK,SAAS,CAACN,IAAI,CAAC,CAAC;IACpD,CAAC;IAED;IACAO,YAAY,EAAEA,CAACV,KAAK,EAAEC,MAAM,KAAK;MAC/BD,KAAK,CAACJ,QAAQ,GAAGK,MAAM,CAACC,OAAO;;MAE/B;MACA,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;MACrDJ,IAAI,CAACP,QAAQ,GAAGK,MAAM,CAACC,OAAO;MAC9BI,YAAY,CAACE,OAAO,CAAC,MAAM,EAAEJ,IAAI,CAACK,SAAS,CAACN,IAAI,CAAC,CAAC;IACpD,CAAC;IACD;IACAQ,QAAQ,EAAEA,CAACX,KAAK,EAAEC,MAAM,KAAK;MAC3BD,KAAK,CAACL,SAAS,GAAGM,MAAM,CAACC,OAAO,CAACP,SAAS;MAC1CK,KAAK,CAACJ,QAAQ,GAAGK,MAAM,CAACC,OAAO,CAACN,QAAQ;MACxCI,KAAK,CAACH,EAAE,GAAGI,MAAM,CAACC,OAAO,CAACL,EAAE;;MAE5B;MACAS,YAAY,CAACE,OAAO,CAAC,MAAM,EAAEJ,IAAI,CAACK,SAAS,CAACR,MAAM,CAACC,OAAO,CAAC,CAAC;IAC9D,CAAC;IACD;IACAU,WAAW,EAAGZ,KAAK,IAAK;MACtBM,YAAY,CAACO,UAAU,CAAC,MAAM,CAAC;MAC/Bb,KAAK,CAACL,SAAS,GAAG,IAAI;MACtBK,KAAK,CAACJ,QAAQ,GAAI,IAAI;MACtBI,KAAK,CAACH,EAAE,GAAG,IAAI;IACjB;EACF;AACF,CAAC,CAAC;;AAEF;AACA,eAAeL,SAAS,CAACsB,OAAO;AAChC,OAAO,MAAM;EAAEf,aAAa;EAAEW,YAAY;EAAEC,QAAQ;EAAEC;AAAY,CAAC,GAAGpB,SAAS,CAACuB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}