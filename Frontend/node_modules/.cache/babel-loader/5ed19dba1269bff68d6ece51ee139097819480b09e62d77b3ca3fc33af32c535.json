{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Phoenix\\\\Documents\\\\Developpeur_d_application_JavaScript_React\\\\projet_13\\\\argent_bank\\\\Frontend\\\\src\\\\pages\\\\loginPage\\\\loginPageForm.jsx\",\n  _s = $RefreshSig$();\nimport Invalid from \"./loginPageInvalid.jsx\";\nimport { fetch_Token } from \"../../services/login.service.js\";\nimport { fetch_UserInfos } from \"../../services/login.service.js\";\nimport { set_Login } from \"../../Redux/authReducer/authSlice.js\";\nimport { set_User } from \"../../Redux/userReducer/userSlice.js\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Form() {\n  _s();\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [remember, setRemember] = useState(false);\n  const [show, setShow] = useState(false);\n\n  /**\n   * Function to handle the \"Remember me\" checkbox.\n   */\n  const handleCheck = () => {\n    // Get the 'remember' checkbox element\n    const check = document.getElementById(\"remember\");\n    // If the checkbox is checked, set 'remember' state to true\n    if (check.checked) {\n      setRemember(true);\n    }\n  };\n\n  /**\n   * Function to handle the login form submission.\n   * @param {Object} e - The form submission event.\n   */\n  const handle_Form = async e => {\n    e.preventDefault();\n\n    // Attempt to fetch a token with the provided password and email\n    const token = await fetch_Token(password, email);\n\n    // If the password or email is empty, or fetching the token fails, show an error message\n    if (password === \"\" || email === \"\" || !token) {\n      setShow(true);\n      setTimeout(() => {\n        setShow(false);\n      }, 3000);\n    } else {\n      // If credentials are valid, dispatch the login action to update the state\n      dispatch(set_Login({\n        token: token,\n        keepLogging: remember,\n        authenticated: true\n      }));\n\n      // Fetch user information using the token\n      const infos = await fetch_UserInfos(token);\n      const user = {\n        firstName: infos.firstName,\n        lastName: infos.lastName,\n        id: infos.id\n      };\n\n      // Dispatch the set user action to update user information in the state\n      dispatch(set_User(user));\n\n      // Navigate to the user's profile page\n      navigate(\"/profile\");\n    }\n    return;\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginForm__Container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"loginForm__Container__Label\",\n        htmlFor: \"userMail\",\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        type: \"text\",\n        id: \"userMail\",\n        name: \"username\",\n        autoComplete: \"off\",\n        onChange: e => {\n          setEmail(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginForm__Container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"loginForm__Container__Label\",\n        htmlFor: \"userPassword\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        type: \"password\",\n        autoComplete: \"off\",\n        id: \"userPassword\",\n        name: \"password\",\n        onChange: e => {\n          setPassword(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Invalid, {\n        show: show\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"check__Container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"check__Container__Input\",\n        type: \"checkbox\",\n        id: \"remember\",\n        name: \"Remember me\",\n        onClick: handleCheck\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"check__Container__Label\",\n        htmlFor: \"remember\",\n        children: \"Remember me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginButton\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        type: \"button\",\n        onClick: handle_Form,\n        children: \"Sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(Form, \"s2b/zpY/pLfgJOtU/Kxjb0IxNFc=\");\n_c = Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["Invalid","fetch_Token","fetch_UserInfos","set_Login","set_User","useState","jsxDEV","_jsxDEV","Form","_s","password","setPassword","email","setEmail","remember","setRemember","show","setShow","handleCheck","check","document","getElementById","checked","handle_Form","e","preventDefault","token","setTimeout","dispatch","keepLogging","authenticated","infos","user","firstName","lastName","id","navigate","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","name","autoComplete","onChange","target","value","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Phoenix/Documents/Developpeur_d_application_JavaScript_React/projet_13/argent_bank/Frontend/src/pages/loginPage/loginPageForm.jsx"],"sourcesContent":["import Invalid from \"./loginPageInvalid.jsx\";\nimport { fetch_Token } from \"../../services/login.service.js\";\nimport { fetch_UserInfos } from \"../../services/login.service.js\";\nimport { set_Login } from \"../../Redux/authReducer/authSlice.js\";\nimport { set_User } from \"../../Redux/userReducer/userSlice.js\";\nimport { useState } from \"react\";\n\nexport default function Form() {\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [remember, setRemember] = useState(false);\n  const [show, setShow] = useState(false);\n\n  /**\n   * Function to handle the \"Remember me\" checkbox.\n   */\n  const handleCheck = () => {\n    // Get the 'remember' checkbox element\n    const check = document.getElementById(\"remember\");\n    // If the checkbox is checked, set 'remember' state to true\n    if (check.checked) {\n      setRemember(true);\n    }\n  };\n\n  /**\n   * Function to handle the login form submission.\n   * @param {Object} e - The form submission event.\n   */\n  const handle_Form = async (e) => {\n    e.preventDefault();\n\n    // Attempt to fetch a token with the provided password and email\n    const token = await fetch_Token(password, email);\n\n    // If the password or email is empty, or fetching the token fails, show an error message\n    if (password === \"\" || email === \"\" || !token) {\n      setShow(true);\n      setTimeout(() => {\n        setShow(false);\n      }, 3000);\n    } else {\n      // If credentials are valid, dispatch the login action to update the state\n      dispatch(\n        set_Login({ token: token, keepLogging: remember, authenticated: true })\n      );\n\n      // Fetch user information using the token\n      const infos = await fetch_UserInfos(token);\n      const user = {\n        firstName: infos.firstName,\n        lastName: infos.lastName,\n        id: infos.id,\n      };\n\n      // Dispatch the set user action to update user information in the state\n      dispatch(set_User(user));\n\n      // Navigate to the user's profile page\n      navigate(\"/profile\");\n    }\n    return;\n  };\n\n  return (\n    <form>\n      {/* Username input */}\n      <div className=\"loginForm__Container\">\n        <label className=\"loginForm__Container__Label\" htmlFor=\"userMail\">\n          Username\n        </label>\n        <input\n          className=\"input\"\n          type=\"text\"\n          id=\"userMail\"\n          name=\"username\"\n          autoComplete=\"off\"\n          onChange={(e) => {\n            setEmail(e.target.value);\n          }}\n        />\n      </div>\n      {/* Password input */}\n      <div className=\"loginForm__Container\">\n        <label className=\"loginForm__Container__Label\" htmlFor=\"userPassword\">\n          Password\n        </label>\n        <input\n          className=\"input\"\n          type=\"password\"\n          autoComplete=\"off\"\n          id=\"userPassword\"\n          name=\"password\"\n          onChange={(e) => {\n            setPassword(e.target.value);\n          }}\n        />\n        {/* Display the Forgot component with error message if 'show' is true */}\n        <Invalid show={show} />\n      </div>\n      {/* \"Remember me\" checkbox */}\n      <div className=\"check__Container\">\n        <input\n          className=\"check__Container__Input\"\n          type=\"checkbox\"\n          id=\"remember\"\n          name=\"Remember me\"\n          onClick={handleCheck}\n        />\n        <label className=\"check__Container__Label\" htmlFor=\"remember\">\n          Remember me\n        </label>\n      </div>\n      {/* Sign-in button */}\n      <div className=\"loginButton\">\n        <button className=\"button\" type=\"button\" onClick={handle_Form}>\n          Sign in\n        </button>\n      </div>\n    </form>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,OAAO,MAAM,wBAAwB;AAC5C,SAASC,WAAW,QAAQ,iCAAiC;AAC7D,SAASC,eAAe,QAAQ,iCAAiC;AACjE,SAASC,SAAS,QAAQ,sCAAsC;AAChE,SAASC,QAAQ,QAAQ,sCAAsC;AAC/D,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;;EAEvC;AACF;AACA;EACE,MAAMa,WAAW,GAAGA,CAAA,KAAM;IACxB;IACA,MAAMC,KAAK,GAAGC,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC;IACjD;IACA,IAAIF,KAAK,CAACG,OAAO,EAAE;MACjBP,WAAW,CAAC,IAAI,CAAC;IACnB;EACF,CAAC;;EAED;AACF;AACA;AACA;EACE,MAAMQ,WAAW,GAAG,MAAOC,CAAC,IAAK;IAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC;;IAElB;IACA,MAAMC,KAAK,GAAG,MAAMzB,WAAW,CAACS,QAAQ,EAAEE,KAAK,CAAC;;IAEhD;IACA,IAAIF,QAAQ,KAAK,EAAE,IAAIE,KAAK,KAAK,EAAE,IAAI,CAACc,KAAK,EAAE;MAC7CT,OAAO,CAAC,IAAI,CAAC;MACbU,UAAU,CAAC,MAAM;QACfV,OAAO,CAAC,KAAK,CAAC;MAChB,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,MAAM;MACL;MACAW,QAAQ,CACNzB,SAAS,CAAC;QAAEuB,KAAK,EAAEA,KAAK;QAAEG,WAAW,EAAEf,QAAQ;QAAEgB,aAAa,EAAE;MAAK,CAAC,CACxE,CAAC;;MAED;MACA,MAAMC,KAAK,GAAG,MAAM7B,eAAe,CAACwB,KAAK,CAAC;MAC1C,MAAMM,IAAI,GAAG;QACXC,SAAS,EAAEF,KAAK,CAACE,SAAS;QAC1BC,QAAQ,EAAEH,KAAK,CAACG,QAAQ;QACxBC,EAAE,EAAEJ,KAAK,CAACI;MACZ,CAAC;;MAED;MACAP,QAAQ,CAACxB,QAAQ,CAAC4B,IAAI,CAAC,CAAC;;MAExB;MACAI,QAAQ,CAAC,UAAU,CAAC;IACtB;IACA;EACF,CAAC;EAED,oBACE7B,OAAA;IAAA8B,QAAA,gBAEE9B,OAAA;MAAK+B,SAAS,EAAC,sBAAsB;MAAAD,QAAA,gBACnC9B,OAAA;QAAO+B,SAAS,EAAC,6BAA6B;QAACC,OAAO,EAAC,UAAU;QAAAF,QAAA,EAAC;MAElE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACRpC,OAAA;QACE+B,SAAS,EAAC,OAAO;QACjBM,IAAI,EAAC,MAAM;QACXT,EAAE,EAAC,UAAU;QACbU,IAAI,EAAC,UAAU;QACfC,YAAY,EAAC,KAAK;QAClBC,QAAQ,EAAGvB,CAAC,IAAK;UACfX,QAAQ,CAACW,CAAC,CAACwB,MAAM,CAACC,KAAK,CAAC;QAC1B;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAENpC,OAAA;MAAK+B,SAAS,EAAC,sBAAsB;MAAAD,QAAA,gBACnC9B,OAAA;QAAO+B,SAAS,EAAC,6BAA6B;QAACC,OAAO,EAAC,cAAc;QAAAF,QAAA,EAAC;MAEtE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACRpC,OAAA;QACE+B,SAAS,EAAC,OAAO;QACjBM,IAAI,EAAC,UAAU;QACfE,YAAY,EAAC,KAAK;QAClBX,EAAE,EAAC,cAAc;QACjBU,IAAI,EAAC,UAAU;QACfE,QAAQ,EAAGvB,CAAC,IAAK;UACfb,WAAW,CAACa,CAAC,CAACwB,MAAM,CAACC,KAAK,CAAC;QAC7B;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAEFpC,OAAA,CAACP,OAAO;QAACgB,IAAI,EAAEA;MAAK;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC,eAENpC,OAAA;MAAK+B,SAAS,EAAC,kBAAkB;MAAAD,QAAA,gBAC/B9B,OAAA;QACE+B,SAAS,EAAC,yBAAyB;QACnCM,IAAI,EAAC,UAAU;QACfT,EAAE,EAAC,UAAU;QACbU,IAAI,EAAC,aAAa;QAClBK,OAAO,EAAEhC;MAAY;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CAAC,eACFpC,OAAA;QAAO+B,SAAS,EAAC,yBAAyB;QAACC,OAAO,EAAC,UAAU;QAAAF,QAAA,EAAC;MAE9D;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAENpC,OAAA;MAAK+B,SAAS,EAAC,aAAa;MAAAD,QAAA,eAC1B9B,OAAA;QAAQ+B,SAAS,EAAC,QAAQ;QAACM,IAAI,EAAC,QAAQ;QAACM,OAAO,EAAE3B,WAAY;QAAAc,QAAA,EAAC;MAE/D;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEX;AAAClC,EAAA,CAlHuBD,IAAI;AAAA2C,EAAA,GAAJ3C,IAAI;AAAA,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}